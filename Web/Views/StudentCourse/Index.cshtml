@{
    ViewData["Title"] = "Ders Seçimi";
}

<script>
    $(() => {
        var courseList = [];

        function getToken() {
            var token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }

        function getCourses() {
            return $.ajax({
                type: "POST",
                url: "/Course/GetAllCourse",
                data: { __RequestVerificationToken: getToken() },
                dataType: "json",
                success: function (response) {
                    if (response != null) {
                        courseList = response;
                        loadDx();
                    }
                },
                failure: function (response) {
                    DevExpress.ui.notify("Belirlenemeyen bir sorun oluştu", "warning", 3000);
                    return null;
                },
                error: function (response) {
                    DevExpress.ui.notify("Veriler çekilirken bir hata oluştu", "error", 3000);
                    return null;
                }
            });
        }

        getCourses();

        DataSource = function () {
            return new DevExpress.data.CustomStore({
                key: "id",
                load(loadOptions) {
                    return $.ajax({
                        type: "POST",
                        url: "/StudentCourse/GetAllStudent",
                        data: { __RequestVerificationToken: getToken() },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                return response;
                            }
                        },
                        failure: function (response) {
                            DevExpress.ui.notify("Belirlenemeyen bir sorun oluştu", "warning", 3000);
                            return null;
                        },
                        error: function (response) {
                            DevExpress.ui.notify("Veriler çekilirken bir hata oluştu", "error", 3000);
                            return null;
                        }
                    });
                },
            });
        }

        DataSourceDetail = function (studentId) {
            return new DevExpress.data.CustomStore({
                key: "id",
                insert: function (key) {
                    key.studentId = studentId;
                    insertStudentCourse(key, studentId);
                },
                remove: function (key) {
                    deleteStudentCourse(key, studentId);
                },
                load(loadOptions) {
                    return $.ajax({
                        type: "POST",
                        url: "/StudentCourse/GetAllStudentCourse",
                        data: { __RequestVerificationToken: getToken(), studentId: studentId },
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                return response;
                            }
                        },
                        failure: function (response) {
                            DevExpress.ui.notify("Belirlenemeyen bir sorun oluştu", "warning", 3000);
                            return null;
                        },
                        error: function (response) {
                            DevExpress.ui.notify("Veriler çekilirken bir hata oluştu", "error", 3000);
                            return null;
                        }
                    });
                },
            });
        }

        function loadDx() {
            $('#gridContainer').dxDataGrid({
                dataSource: new DevExpress.data.DataSource({
                    store: DataSource()
                }),
                width: "auto",
                height: "auto",
                columnAutoWidth: true,
                allowColumnReordering: true,
                searchPanel: { visible: true },
                showRowLines: true,
                rowAlternationEnabled: true,
                columnHidingEnabled: true,
                allowColumnResizing: true,
                selection: { mode: 'single' },
                hoverStateEnabled: true,
                showBorders: true,
                filterPanel: { visible: true },
                headerFilter: { visible: true },
                filterRow: {
                    applyFilter: "auto",
                    resetOperationText: "Reset",
                    showOperationChooser: true,
                    visible: true
                },
                columnChooser: { enabled: true, mode: "select" },
                export: { fileName: 'Ders Seçim Listesi', enabled: true },
                columns: [
                    {
                        caption: 'Id',
                        dataField: 'id',
                        dataType: 'number',
                        visible: false
                    },
                    {
                        caption: 'Ad',
                        dataField: 'firstName',
                        dataType: 'string',
                    },
                    {
                        caption: 'Soyad',
                        dataField: 'lastName',
                        dataType: 'string',
                    },
                    {
                        caption: 'Doğum Tarihi',
                        dataField: 'birthDate',
                        dataType: 'date',
                    },
                    {
                        caption: 'Yaratılma Tarihi',
                        dataField: 'createDate',
                        dataType: 'datetime',
                    },
                ],
                onSelectionChanged(e) {
                    e.component.collapseAll(-1);
                    e.component.expandRow(e.currentSelectedRowKeys[0]);
                },
                masterDetail: {
                    enabled: true,
                    template(container, options) {
                        console.log(options);
                        $('<div>')
                            .addClass('master-detail-caption')
                            .text(options.data.id + " Numaralı Öğrencinin Seçtiği Dersler")
                            .appendTo(container);

                        $('<div>').dxDataGrid({
                            elementAttr: { id: "detailGridContainer_" + options.key },
                            dataSource: new DevExpress.data.DataSource({
                                store: DataSourceDetail(options.key),
                                filter: ['studentId', '=', options.key],
                            }),
                            width: "auto",
                            height: "500px",
                            columnAutoWidth: true,
                            allowColumnReordering: true,
                            searchPanel: { visible: true },
                            showRowLines: true,
                            rowAlternationEnabled: true,
                            columnHidingEnabled: true,
                            allowColumnResizing: true,
                            selection: { mode: 'single' },
                            hoverStateEnabled: true,
                            showBorders: true,
                            filterPanel: { visible: false },
                            headerFilter: { visible: true },
                            filterRow: {
                                applyFilter: "auto",
                                resetOperationText: "Reset",
                                showOperationChooser: true,
                                visible: true
                            },
                            columnChooser: { enabled: true, mode: "select" },
                            export: { enabled: false },
                            columns: [
                                {
                                    caption: 'Id',
                                    dataField: 'id',
                                    dataType: 'number',
                                    visible: false
                                },
                                {
                                    caption: 'Öğrenci Id',
                                    dataField: 'studentId',
                                    dataType: 'number',
                                    visible: false
                                },
                                {
                                    caption: 'Öğrenci Adı',
                                    dataField: 'studentName',
                                    dataType: 'string',
                                    visible: false
                                },
                                {
                                    caption: 'Ders Id',
                                    dataField: 'courseId',
                                    dataType: 'number',
                                },
                                {
                                    caption: 'Ders Adı',
                                    dataField: 'courseName',
                                    dataType: 'string',
                                },
                                {
                                    caption: 'Yaratılma Tarihi',
                                    dataField: 'createDate',
                                    dataType: 'datetime',
                                },
                            ],
                            editing: {
                                allowAdding: true,
                                allowDeleting: true,
                                confirmDelete: true,
                                mode: "popup",
                                popup: {
                                    showTitle: true,
                                    title: "Ders Seçimi",
                                    height: "auto",
                                    width: "auto",
                                },
                                form: {
                                    colCount: 1,
                                    items: [
                                        {
                                            colSpan: 1,
                                            dataField: "courseId",
                                            validationRules: [{ type: "required" }],
                                            editorType: "dxSelectBox",
                                            label: { text: "Ders" },
                                            editorOptions: {
                                                showClearButton: true,
                                                dataSource: new DevExpress.data.DataSource({
                                                    store: courseList
                                                }),
                                                searchEnabled: true,
                                                displayExpr: "name",
                                                valueExpr: "id",
                                            }
                                        },
                                    ],
                                },
                                useIcons: true
                            },
                        }).appendTo(container);
                    },
                },
            });
        }


        function insertStudentCourse(studentCourse, studentId) {
            $.ajax({
                type: "POST",
                url: "/StudentCourse/InsertStudentCourse",
                data: { __RequestVerificationToken: getToken(), studentCourse: studentCourse },
                dataType: "json",
                success: function (response) {
                    if (response.isSuccess) {
                        DevExpress.ui.notify(response.message, "success", 3000);
                        refreshDetailGrid(studentId);
                    }
                    else
                        DevExpress.ui.notify(response.message, "error", 3000);
                },
                failure: function (response) {
                    DevExpress.ui.notify("Hata oluştu", "warning", 3000);
                },
                error: function (response) {
                    DevExpress.ui.notify("Veriler işlenirken bir hata oluştu", "error", 3000);
                }
            });
        }

        function deleteStudentCourse(id, studentId) {
            $.ajax({
                type: "POST",
                url: "/StudentCourse/DeleteStudentCourse",
                data: { __RequestVerificationToken: getToken(), id: id },
                dataType: "json",
                success: function (response) {
                    if (response.isSuccess) {
                        DevExpress.ui.notify(response.message, "success", 3000);
                        refreshDetailGrid(studentId);
                    }
                    else
                        DevExpress.ui.notify(response.message, "error", 3000);
                },
            });
        }

        var masterGrid = function () {
            return $('#gridContainer').dxDataGrid('instance');
        };

        var detailGrid = function (key) {
            return $('#detailGridContainer_' + key).dxDataGrid('instance');
        };

        function refreshMasterGrid() {
            masterGrid().refresh();
        }

        function refreshDetailGrid(id) {
            detailGrid(id).refresh();
        }
    });

</script>

<div id="gridContainer"></div>